<?php

/**
 * @file
 * Code for the Islandora Block Options module.
 */

/**
 * Implements hook_form_FORM_ID_alter() for block_add_block_form().
 *
 * Adds OG context visibility options to add block form.
 */
function block_islandora_options_form_block_add_block_form_alter(&$form, &$form_state) {
  block_islandora_options_form_block_admin_configure_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter() for block_admin_configure().
 *
 * Adds OG Context visibility options to block configuration form.
 */
function block_islandora_options_form_block_admin_configure_alter(&$form, &$form_state) {
  drupal_add_js(drupal_get_path('module', 'block_islandora_options') . '/block_islandora_options.js');
  $default = array();
  foreach (db_query("SELECT cmodel FROM {block_islandora_options} WHERE module = :module AND delta = :delta", array(
    ':module' => $form['module']['#value'],
    ':delta' => $form['delta']['#value'],
  )) as $row) {
    $default[] = $row->cmodel;
  }
  $form['visibility']['islandora_cmodels'] = array(
    '#type' => 'fieldset',
    '#title' => t('Islandora Cmodels'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#group' => 'visibility',
    '#weight' => 20,
  );
  $form['visibility']['islandora_cmodels']['islandora_cmodels_status'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Show block based on Islandora Cmodel'),
    '#description' => t('Show this block only on pages that have the specified cmodels.'),
    '#options' => array(),
    '#default_value' => $default,
    '#empty_option' => t('Not restricted'),
    '#empty_value' => -1,
  );
  module_load_include('inc', 'islandora', 'includes/utilities');
  foreach (islandora_get_content_models() as $cmodel => $value) {
    $form['visibility']['islandora_cmodels']['islandora_cmodels_status']['#options'][$value['pid']] = $value['label'];
  }
  $form['#submit'][] = 'block_islandora_options_form_block_admin_configure_submit';
}

/**
 * Form submit handler for block configuration form.
 *
 * @see block_islandora_options_form_block_admin_configure_alter()
 */
function block_islandora_options_form_block_admin_configure_submit($form, &$form_state) {
  db_delete('block_islandora_options')
    ->condition('module', $form_state['values']['module'])
    ->condition('delta', $form_state['values']['delta'])
    ->execute();
  if (count($form_state['values']['islandora_cmodels_status']) > 0) {
    foreach (array_filter($form_state['values']['islandora_cmodels_status']) as $pid) {
      $opt = new stdClass;
      $opt->cmodel = $pid;
      $opt->module = $form_state['values']['module'];
      $opt->delta = $form_state['values']['delta'];
      block_islandora_options_save_option($opt);
    }
  }
}

/**
 * Add the passed option to the database.
 */
function block_islandora_options_save_option($opt) {
  db_insert('block_islandora_options')
    ->fields(array(
      'cmodel' => $opt->cmodel,
      'module' => $opt->module,
      'delta' => $opt->delta,
    ))
    ->execute();
}

/**
 * Implements hook_block_list_alter().
 *
 * Hide the block if the visibility conditions are not met.
 */
function block_islandora_options_block_list_alter(&$blocks) {
  global $theme_key;

  // Get information from the block_islandora_options table.
  $islanodra_options_blocks = array();
  $result = db_query('SELECT module, delta, cmodel FROM {block_islandora_options}');
  foreach ($result as $record) {
    $islandora_options_blocks[$record->module][$record->delta][] = $record->cmodel;
  }

  foreach ($blocks as $key => $block) {
    if (!isset($block->theme) || !isset($block->status) || $block->theme != $theme_key || $block->status != 1) {
      // This block was added by a contrib module, leave it in the list.
      continue;
    }

    if (isset($islandora_options_blocks[$block->module][$block->delta])) {
      if ($object = menu_get_object('islandora_object', 2)) {
        $cmodels = $islandora_options_blocks[$block->module][$block->delta];
        if (count(array_intersect($cmodels, $object->models)) == 0) {
          unset($blocks[$key]);
        }
      } else {
        unset($blocks[$key]);
      }
    }
  }
}

/**
 * Implements hook_features_api().
 */
function block_islandora_options_features_api() {
  return array(
    'block_islandora_options_config' => array(
      'name' => 'Islandora block options config',
      'file' => drupal_get_path('module', 'block_islandora_options') . '/block_islandora_options.features.inc',
      'default_hook' => 'block_islandora_options_config_features_default_settings',
      'feature_source' => TRUE,
    ),
  );
}

/**
 * Returns all options.
 */
function block_islandora_options_all_options() {
  $opts = db_select('block_islandora_options', 'bio')
    ->fields('bio')
    ->orderBy('oid', 'ASC')
    ->execute()
    ->fetchAllAssoc('oid');
  return $opts;
}